/*
| Element            | Allowed in Abstract Class?  | Notes                       |
| ------------------ | --------------------------- | --------------------------- |
| Abstract method    | âœ…                          | No body                     |
| Concrete method    | âœ…                          | Normal method               |
| Constructor        | âœ…                          | Called via subclass         |
| Instance variables | âœ…                          | For state                   |
| Static variables   | âœ…                          | Shared state                |
| Final variables    | âœ…                          | Constant                    |
| Static methods     | âœ…                          | Class-level behavior        |
| Final methods      | âœ…                          | Cannot override             |
| Static block       | âœ…                          | Initialization logic        |
| Inner class        | âœ…                          | Nested class                |
| Main method        | âœ…                          | Can run but not instantiate |


ðŸ‘‰ Why 100% abstraction not possible through abstract class
Ans : We cannot achieve 100% abstraction using abstract classes because an abstract class
can contain both abstract and non-abstract (concrete) methods, variables, and constructors.
These implemented members expose some details, hence abstraction is partial, not complete.

*/